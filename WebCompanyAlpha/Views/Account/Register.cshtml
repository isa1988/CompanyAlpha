@model WebCompanyAlpha.Models.Account.RegisterModel

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm(Html.BeginForm("Register", "Account", null, FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.PasswordReplay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordReplay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordReplay, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.RoleID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RoleID,
                            new SelectList(Model.Roles, "Value", "Text"),
                            new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <p>текущая картинка</p>
                <img src="@Url.Content("~/Media/" + Model.Login)" class="img-fluid img-thumbnail" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10" id="dropZone">
                Для загрузки, перетащите файл сюда.
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="file" id="file" name="file" accept=".jpg, .jpeg, .png" /><br>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <div id="imageContent">

                </div>
            </div>
        </div>
        <br>

        @if (@Model.Error?.Length > 0)
        {
            <div class="form-group">
                <p class="text-danger"> Ошибка: @Model.Error </p>
            </div>
        }

        <p></p>

        <div class="form-group col-md-offset-2 col-md-10">
            <input type="submit" value="Сохранить" class="btn btn-success" />
            <a href="/News/Show" class="btn btn-success">Назад</a>
        </div>
    </div>
}