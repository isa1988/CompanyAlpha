@model WebCompanyAlpha.Models.Account.UserModel

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

@using (Html.BeginForm(Html.BeginForm("EditPersonalArea", "Account", FormMethod.Post, new { enctype = "multipart/form-data" })))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UserModel</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.IsPaswordChange, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsPaswordChange)
                    @Html.ValidationMessageFor(model => model.IsPaswordChange, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPassword, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.OldPassword, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordReplay, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordReplay, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PasswordReplay, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SurName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.SurName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.SurName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Name, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.MiddleName, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.MiddleName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <p>текущая картинка</p>
                @if (Model.IsPhoto)
                {
                    <img src=@Url.Content("~/Media/" + Model.Login + ".jpg") class="img-fluid img-thumbnail imgSmall"/>
                }
                else
                {
                    <img src=@Url.Content("~/Media/unknown-person.jpg") class="img-fluid img-thumbnail imgSmall"/>
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsFileDelete, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsFileDelete)
                    @Html.ValidationMessageFor(model => model.IsFileDelete, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10" id="dropZone">
                Для загрузки, перетащите файл сюда.
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="file" id="file" name="fileImport" accept=".jpg, .jpeg, .png"/><br>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <div id="imageContent">

                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-success"/>
            </div>
        </div>
    </div>
}
